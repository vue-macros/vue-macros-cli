id: setup-sfc start comment
language: html
rule:
  kind: script_element
  has:
    kind: start_tag
    pattern: $START
    precedes:
      kind: raw_text
      pattern: $RAW
      precedes:
        kind: end_tag
        pattern: $END
  inside:
    kind: fragment
fix: |-
  $START*/
  $RAW/*$END

---

id: setup-sfc start ignore comment in style
language: html
rule:
  kind: style_element
  pattern: $A
  has:
    kind: raw_text
    regex: \*/
transform:
  B:
    replace:
      replace: \*/
      by: '*\/'
      source: $A
fix: $B

---

id: setup-sfc end comment
language: html
rule:
  kind: fragment
  pattern: $A
  has:
    kind: script_element
fix: /*$A*/

---

id: setup-sfc clean comment
language: tsx
rule:
  kind: comment
  regex: /\*</?script|<script.*>\*/$
  pattern: $A
  inside:
    kind: program
transform:
  B:
    substring:
      startChar: 2
      endChar: -2
      source: $A
  C:
    replace:
      replace: \*\\/
      by: '*/'
      source: $B
fix: $C

---

id: setup-sfc delete
language: tsx
rule:
  kind: comment
  regex: /\*</?script|<script.*>\*/$
  pattern: $A
  inside:
    kind: program
fix: ''

---

id: setup-sfc delete .vue suffix in ts
language: ts
rule:
  kind: string_fragment
  regex: \.vue$
  pattern: $A
  any:
    - inside:
        kind: string
        inside:
          kind: import_statement
    - inside:
        kind: string
        inside:
          kind: arguments
          follows:
            kind: import
            stopBy: end
transform:
  B:
    replace:
      replace: vue$
      by: setup.tsx
      source: $A
fix: $B

---

id: setup-sfc delete .vue suffix in tsx
language: tsx
rule:
  kind: string_fragment
  regex: \.vue$
  pattern: $A
  any:
    - inside:
        kind: string
        inside:
          kind: import_statement
    - inside:
        kind: string
        inside:
          kind: arguments
          follows:
            kind: import
            stopBy: end
transform:
  B:
    replace:
      replace: vue$
      by: setup.tsx
      source: $A
fix: $B
